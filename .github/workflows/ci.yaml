name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - "feature/**"
      - "bugfix/**"
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - name: <b>Checkout Code</b>
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: <b>Set up Go</b>
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
          cache: false

      - name: <b>Install Dependencies</b>
        run: |
          go mod download
          go mod verify

      - name: <b>Run Go Vet</b>
        run: go vet ./...

      - name: <b>Run Golangci-lint</b>
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest

      - name: <b>Run Tests</b>
        run: go test -v ./... -coverprofile=coverage.out

      - name: <b>Upload Coverage</b>
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build Binaries
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: <b>Checkout Code</b>
        uses: actions/checkout@v4

      - name: <b>Set up Go</b>
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      - name: <b>Build Application</b>
        run: go build -v ./...

  release:
    name: Semantic Release
    needs: [test, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: <b>Checkout Code</b>
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: <b>Set up Go</b>
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      - name: <b>Setup Node.js</b>
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: <b>Install Semantic Release</b>
        run: |
          npm install -g semantic-release \
          @semantic-release/changelog \
          @semantic-release/git

      - name: <b>Run Semantic Release</b>
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
